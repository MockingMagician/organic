
window.projectVersion = 'v1.0.0';

(function(root) {

    var bhIndex = null;
    var rootPath = '';
    var treeHtml = '        <ul>                <li data-name="namespace:MockingMagician" class="opened">                    <div style="padding-left:0px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="MockingMagician.html">MockingMagician</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:MockingMagician_Organic" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="MockingMagician/Organic.html">Organic</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:MockingMagician_Organic_Collection" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="MockingMagician/Organic/Collection.html">Collection</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:MockingMagician_Organic_Collection_AbstractCollection" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/Collection/AbstractCollection.html">AbstractCollection</a>                    </div>                </li>                            <li data-name="class:MockingMagician_Organic_Collection_DirectoryCollection" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/Collection/DirectoryCollection.html">DirectoryCollection</a>                    </div>                </li>                            <li data-name="class:MockingMagician_Organic_Collection_FileCollection" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/Collection/FileCollection.html">FileCollection</a>                    </div>                </li>                            <li data-name="class:MockingMagician_Organic_Collection_InodeCollection" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/Collection/InodeCollection.html">InodeCollection</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:MockingMagician_Organic_Exception" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="MockingMagician/Organic/Exception.html">Exception</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:MockingMagician_Organic_Exception_CollectionValueException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/Exception/CollectionValueException.html">CollectionValueException</a>                    </div>                </li>                            <li data-name="class:MockingMagician_Organic_Exception_DirectoryAlreadyExistException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/Exception/DirectoryAlreadyExistException.html">DirectoryAlreadyExistException</a>                    </div>                </li>                            <li data-name="class:MockingMagician_Organic_Exception_DirectoryCreateException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/Exception/DirectoryCreateException.html">DirectoryCreateException</a>                    </div>                </li>                            <li data-name="class:MockingMagician_Organic_Exception_DirectoryDeleteException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/Exception/DirectoryDeleteException.html">DirectoryDeleteException</a>                    </div>                </li>                            <li data-name="class:MockingMagician_Organic_Exception_DirectoryPathException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/Exception/DirectoryPathException.html">DirectoryPathException</a>                    </div>                </li>                            <li data-name="class:MockingMagician_Organic_Exception_FileAlreadyExistException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/Exception/FileAlreadyExistException.html">FileAlreadyExistException</a>                    </div>                </li>                            <li data-name="class:MockingMagician_Organic_Exception_FileCreateException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/Exception/FileCreateException.html">FileCreateException</a>                    </div>                </li>                            <li data-name="class:MockingMagician_Organic_Exception_FileDeleteException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/Exception/FileDeleteException.html">FileDeleteException</a>                    </div>                </li>                            <li data-name="class:MockingMagician_Organic_Exception_FilePathException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/Exception/FilePathException.html">FilePathException</a>                    </div>                </li>                            <li data-name="class:MockingMagician_Organic_Exception_IOException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/Exception/IOException.html">IOException</a>                    </div>                </li>                            <li data-name="class:MockingMagician_Organic_Exception_InodeCreateLinkException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/Exception/InodeCreateLinkException.html">InodeCreateLinkException</a>                    </div>                </li>                            <li data-name="class:MockingMagician_Organic_Exception_InodeMoveToException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/Exception/InodeMoveToException.html">InodeMoveToException</a>                    </div>                </li>                            <li data-name="class:MockingMagician_Organic_Exception_InodePathException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/Exception/InodePathException.html">InodePathException</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:MockingMagician_Organic_FS" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="MockingMagician/Organic/FS.html">FS</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:MockingMagician_Organic_FS_FSIterator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/FS/FSIterator.html">FSIterator</a>                    </div>                </li>                            <li data-name="class:MockingMagician_Organic_FS_FSIteratorOnlyDir" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/FS/FSIteratorOnlyDir.html">FSIteratorOnlyDir</a>                    </div>                </li>                            <li data-name="class:MockingMagician_Organic_FS_FSIteratorOnlyFiles" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/FS/FSIteratorOnlyFiles.html">FSIteratorOnlyFiles</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:MockingMagician_Organic_Facade" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="MockingMagician/Organic/Facade.html">Facade</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:MockingMagician_Organic_Facade_FileSystem" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/Facade/FileSystem.html">FileSystem</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:MockingMagician_Organic_Helper" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="MockingMagician/Organic/Helper.html">Helper</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:MockingMagician_Organic_Helper_Collection" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/Helper/Collection.html">Collection</a>                    </div>                </li>                            <li data-name="class:MockingMagician_Organic_Helper_CollectionInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/Helper/CollectionInterface.html">CollectionInterface</a>                    </div>                </li>                            <li data-name="class:MockingMagician_Organic_Helper_Path" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/Helper/Path.html">Path</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:MockingMagician_Organic_IO" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="MockingMagician/Organic/IO.html">IO</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:MockingMagician_Organic_IO_IOFile" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/IO/IOFile.html">IOFile</a>                    </div>                </li>                            <li data-name="class:MockingMagician_Organic_IO_IOFileAwareInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/IO/IOFileAwareInterface.html">IOFileAwareInterface</a>                    </div>                </li>                            <li data-name="class:MockingMagician_Organic_IO_IOFileInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/IO/IOFileInterface.html">IOFileInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:MockingMagician_Organic_Inode" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="MockingMagician/Organic/Inode.html">Inode</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:MockingMagician_Organic_Inode_Base" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="MockingMagician/Organic/Inode/Base.html">Base</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:MockingMagician_Organic_Inode_Base_AbstractInode" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="MockingMagician/Organic/Inode/Base/AbstractInode.html">AbstractInode</a>                    </div>                </li>                            <li data-name="class:MockingMagician_Organic_Inode_Base_FileInfo" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="MockingMagician/Organic/Inode/Base/FileInfo.html">FileInfo</a>                    </div>                </li>                            <li data-name="class:MockingMagician_Organic_Inode_Base_InodeInterface" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="MockingMagician/Organic/Inode/Base/InodeInterface.html">InodeInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:MockingMagician_Organic_Inode_Directory" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/Inode/Directory.html">Directory</a>                    </div>                </li>                            <li data-name="class:MockingMagician_Organic_Inode_File" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/Inode/File.html">File</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:MockingMagician_Organic_Permission" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="MockingMagician/Organic/Permission.html">Permission</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:MockingMagician_Organic_Permission_Permission" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/Permission/Permission.html">Permission</a>                    </div>                </li>                            <li data-name="class:MockingMagician_Organic_Permission_PermissionFactory" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/Permission/PermissionFactory.html">PermissionFactory</a>                    </div>                </li>                            <li data-name="class:MockingMagician_Organic_Permission_PermissionScope" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="MockingMagician/Organic/Permission/PermissionScope.html">PermissionScope</a>                    </div>                </li>                </ul></div>                </li>                </ul></div>                </li>                </ul></div>                </li>                </ul>';

    var searchTypeClasses = {
        'Namespace': 'label-default',
        'Class': 'label-info',
        'Interface': 'label-primary',
        'Trait': 'label-success',
        'Method': 'label-danger',
        '_': 'label-warning'
    };

    var searchIndex = [
                    
            {"type": "Namespace", "link": "MockingMagician.html", "name": "MockingMagician", "doc": "Namespace MockingMagician"},{"type": "Namespace", "link": "MockingMagician/Organic.html", "name": "MockingMagician\\Organic", "doc": "Namespace MockingMagician\\Organic"},{"type": "Namespace", "link": "MockingMagician/Organic/Collection.html", "name": "MockingMagician\\Organic\\Collection", "doc": "Namespace MockingMagician\\Organic\\Collection"},{"type": "Namespace", "link": "MockingMagician/Organic/Exception.html", "name": "MockingMagician\\Organic\\Exception", "doc": "Namespace MockingMagician\\Organic\\Exception"},{"type": "Namespace", "link": "MockingMagician/Organic/FS.html", "name": "MockingMagician\\Organic\\FS", "doc": "Namespace MockingMagician\\Organic\\FS"},{"type": "Namespace", "link": "MockingMagician/Organic/Facade.html", "name": "MockingMagician\\Organic\\Facade", "doc": "Namespace MockingMagician\\Organic\\Facade"},{"type": "Namespace", "link": "MockingMagician/Organic/Helper.html", "name": "MockingMagician\\Organic\\Helper", "doc": "Namespace MockingMagician\\Organic\\Helper"},{"type": "Namespace", "link": "MockingMagician/Organic/IO.html", "name": "MockingMagician\\Organic\\IO", "doc": "Namespace MockingMagician\\Organic\\IO"},{"type": "Namespace", "link": "MockingMagician/Organic/Inode.html", "name": "MockingMagician\\Organic\\Inode", "doc": "Namespace MockingMagician\\Organic\\Inode"},{"type": "Namespace", "link": "MockingMagician/Organic/Inode/Base.html", "name": "MockingMagician\\Organic\\Inode\\Base", "doc": "Namespace MockingMagician\\Organic\\Inode\\Base"},{"type": "Namespace", "link": "MockingMagician/Organic/Permission.html", "name": "MockingMagician\\Organic\\Permission", "doc": "Namespace MockingMagician\\Organic\\Permission"},
            {"type": "Interface", "fromName": "MockingMagician\\Organic\\Helper", "fromLink": "MockingMagician/Organic/Helper.html", "link": "MockingMagician/Organic/Helper/CollectionInterface.html", "name": "MockingMagician\\Organic\\Helper\\CollectionInterface", "doc": "&quot;Interface CollectionInterface.&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\Helper\\CollectionInterface", "fromLink": "MockingMagician/Organic/Helper/CollectionInterface.html", "link": "MockingMagician/Organic/Helper/CollectionInterface.html#method_add", "name": "MockingMagician\\Organic\\Helper\\CollectionInterface::add", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Helper\\CollectionInterface", "fromLink": "MockingMagician/Organic/Helper/CollectionInterface.html", "link": "MockingMagician/Organic/Helper/CollectionInterface.html#method_remove", "name": "MockingMagician\\Organic\\Helper\\CollectionInterface::remove", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Helper\\CollectionInterface", "fromLink": "MockingMagician/Organic/Helper/CollectionInterface.html", "link": "MockingMagician/Organic/Helper/CollectionInterface.html#method_clear", "name": "MockingMagician\\Organic\\Helper\\CollectionInterface::clear", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Helper\\CollectionInterface", "fromLink": "MockingMagician/Organic/Helper/CollectionInterface.html", "link": "MockingMagician/Organic/Helper/CollectionInterface.html#method_isAcceptableValue", "name": "MockingMagician\\Organic\\Helper\\CollectionInterface::isAcceptableValue", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Helper\\CollectionInterface", "fromLink": "MockingMagician/Organic/Helper/CollectionInterface.html", "link": "MockingMagician/Organic/Helper/CollectionInterface.html#method_equals", "name": "MockingMagician\\Organic\\Helper\\CollectionInterface::equals", "doc": "&quot;&quot;"},
            
            {"type": "Interface", "fromName": "MockingMagician\\Organic\\IO", "fromLink": "MockingMagician/Organic/IO.html", "link": "MockingMagician/Organic/IO/IOFileAwareInterface.html", "name": "MockingMagician\\Organic\\IO\\IOFileAwareInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileAwareInterface", "fromLink": "MockingMagician/Organic/IO/IOFileAwareInterface.html", "link": "MockingMagician/Organic/IO/IOFileAwareInterface.html#method_getIO", "name": "MockingMagician\\Organic\\IO\\IOFileAwareInterface::getIO", "doc": "&quot;Get an interface for read or write in file.&quot;"},
            
            {"type": "Interface", "fromName": "MockingMagician\\Organic\\IO", "fromLink": "MockingMagician/Organic/IO.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html", "name": "MockingMagician\\Organic\\IO\\IOFileInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileInterface", "fromLink": "MockingMagician/Organic/IO/IOFileInterface.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html#method_eof", "name": "MockingMagician\\Organic\\IO\\IOFileInterface::eof", "doc": "&quot;Determine whether the end of file has been reached.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileInterface", "fromLink": "MockingMagician/Organic/IO/IOFileInterface.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html#method_flush", "name": "MockingMagician\\Organic\\IO\\IOFileInterface::flush", "doc": "&quot;Forces a write of all buffered output to the file.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileInterface", "fromLink": "MockingMagician/Organic/IO/IOFileInterface.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html#method_getChar", "name": "MockingMagician\\Organic\\IO\\IOFileInterface::getChar", "doc": "&quot;Gets a character from the file.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileInterface", "fromLink": "MockingMagician/Organic/IO/IOFileInterface.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html#method_getCurrentLine", "name": "MockingMagician\\Organic\\IO\\IOFileInterface::getCurrentLine", "doc": "&quot;Returns a string containing the current line from the file.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileInterface", "fromLink": "MockingMagician/Organic/IO/IOFileInterface.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html#method_lock", "name": "MockingMagician\\Organic\\IO\\IOFileInterface::lock", "doc": "&quot;Locks or unlocks the file in the same portable way as flock().&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileInterface", "fromLink": "MockingMagician/Organic/IO/IOFileInterface.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html#method_passThrough", "name": "MockingMagician\\Organic\\IO\\IOFileInterface::passThrough", "doc": "&quot;Reads to EOF on the given file pointer from the current position and writes the results to the output buffer.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileInterface", "fromLink": "MockingMagician/Organic/IO/IOFileInterface.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html#method_read", "name": "MockingMagician\\Organic\\IO\\IOFileInterface::read", "doc": "&quot;Reads the given number of bytes from the file.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileInterface", "fromLink": "MockingMagician/Organic/IO/IOFileInterface.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html#method_scanFormat", "name": "MockingMagician\\Organic\\IO\\IOFileInterface::scanFormat", "doc": "&quot;Reads a line from the file and interprets it according to the specified format, which is described in the\ndocumentation for sprintf().&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileInterface", "fromLink": "MockingMagician/Organic/IO/IOFileInterface.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html#method_seek", "name": "MockingMagician\\Organic\\IO\\IOFileInterface::seek", "doc": "&quot;Seek to a position in the file measured in bytes from the beginning of the file, obtained by adding offset to\nthe position specified by whence.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileInterface", "fromLink": "MockingMagician/Organic/IO/IOFileInterface.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html#method_tell", "name": "MockingMagician\\Organic\\IO\\IOFileInterface::tell", "doc": "&quot;Return current file position.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileInterface", "fromLink": "MockingMagician/Organic/IO/IOFileInterface.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html#method_truncate", "name": "MockingMagician\\Organic\\IO\\IOFileInterface::truncate", "doc": "&quot;Truncates the file to size bytes.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileInterface", "fromLink": "MockingMagician/Organic/IO/IOFileInterface.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html#method_write", "name": "MockingMagician\\Organic\\IO\\IOFileInterface::write", "doc": "&quot;Writes the contents of string to the file\nIf the length argument is given, writing will stop after length bytes have been written\nor the end of string is reached, whichever comes first.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileInterface", "fromLink": "MockingMagician/Organic/IO/IOFileInterface.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html#method_getContent", "name": "MockingMagician\\Organic\\IO\\IOFileInterface::getContent", "doc": "&quot;Reads entire file into a string\nIt close the internal file handler before calling file_get_contents()\nand after operate reopen a new one with the same parameters.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileInterface", "fromLink": "MockingMagician/Organic/IO/IOFileInterface.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html#method_putContent", "name": "MockingMagician\\Organic\\IO\\IOFileInterface::putContent", "doc": "&quot;Write data to the file\nIt close the internal file handler before calling file_put_contents()\nand after operate reopen a new one with the same parameters\nfile_put_contents() is called with LOCK_EX.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileInterface", "fromLink": "MockingMagician/Organic/IO/IOFileInterface.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html#method_addContent", "name": "MockingMagician\\Organic\\IO\\IOFileInterface::addContent", "doc": "&quot;Append data to the file\nIt close the internal file handler before calling file_put_contents()\nand after operate reopen a new one with the same parameters\nfile_put_contents() is called with LOCK_EX | LOCK_APPEND.&quot;"},
            
            {"type": "Interface", "fromName": "MockingMagician\\Organic\\Inode\\Base", "fromLink": "MockingMagician/Organic/Inode/Base.html", "link": "MockingMagician/Organic/Inode/Base/InodeInterface.html", "name": "MockingMagician\\Organic\\Inode\\Base\\InodeInterface", "doc": "&quot;Interface InodeInterface.&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\InodeInterface", "fromLink": "MockingMagician/Organic/Inode/Base/InodeInterface.html", "link": "MockingMagician/Organic/Inode/Base/InodeInterface.html#method_create", "name": "MockingMagician\\Organic\\Inode\\Base\\InodeInterface::create", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\InodeInterface", "fromLink": "MockingMagician/Organic/Inode/Base/InodeInterface.html", "link": "MockingMagician/Organic/Inode/Base/InodeInterface.html#method_moveTo", "name": "MockingMagician\\Organic\\Inode\\Base\\InodeInterface::moveTo", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\InodeInterface", "fromLink": "MockingMagician/Organic/Inode/Base/InodeInterface.html", "link": "MockingMagician/Organic/Inode/Base/InodeInterface.html#method_delete", "name": "MockingMagician\\Organic\\Inode\\Base\\InodeInterface::delete", "doc": "&quot;Delete the inode. An inode is a file or a directory.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\InodeInterface", "fromLink": "MockingMagician/Organic/Inode/Base/InodeInterface.html", "link": "MockingMagician/Organic/Inode/Base/InodeInterface.html#method_createLink", "name": "MockingMagician\\Organic\\Inode\\Base\\InodeInterface::createLink", "doc": "&quot;&quot;"},
            
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\Collection", "fromLink": "MockingMagician/Organic/Collection.html", "link": "MockingMagician/Organic/Collection/AbstractCollection.html", "name": "MockingMagician\\Organic\\Collection\\AbstractCollection", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\Collection\\AbstractCollection", "fromLink": "MockingMagician/Organic/Collection/AbstractCollection.html", "link": "MockingMagician/Organic/Collection/AbstractCollection.html#method___construct", "name": "MockingMagician\\Organic\\Collection\\AbstractCollection::__construct", "doc": "&quot;Collection constructor.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Collection\\AbstractCollection", "fromLink": "MockingMagician/Organic/Collection/AbstractCollection.html", "link": "MockingMagician/Organic/Collection/AbstractCollection.html#method_equals", "name": "MockingMagician\\Organic\\Collection\\AbstractCollection::equals", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\Collection", "fromLink": "MockingMagician/Organic/Collection.html", "link": "MockingMagician/Organic/Collection/DirectoryCollection.html", "name": "MockingMagician\\Organic\\Collection\\DirectoryCollection", "doc": "&quot;Class InodeCollection.&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\Collection\\DirectoryCollection", "fromLink": "MockingMagician/Organic/Collection/DirectoryCollection.html", "link": "MockingMagician/Organic/Collection/DirectoryCollection.html#method___construct", "name": "MockingMagician\\Organic\\Collection\\DirectoryCollection::__construct", "doc": "&quot;InodeCollection constructor.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Collection\\DirectoryCollection", "fromLink": "MockingMagician/Organic/Collection/DirectoryCollection.html", "link": "MockingMagician/Organic/Collection/DirectoryCollection.html#method_createFromPaths", "name": "MockingMagician\\Organic\\Collection\\DirectoryCollection::createFromPaths", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Collection\\DirectoryCollection", "fromLink": "MockingMagician/Organic/Collection/DirectoryCollection.html", "link": "MockingMagician/Organic/Collection/DirectoryCollection.html#method_current", "name": "MockingMagician\\Organic\\Collection\\DirectoryCollection::current", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Collection\\DirectoryCollection", "fromLink": "MockingMagician/Organic/Collection/DirectoryCollection.html", "link": "MockingMagician/Organic/Collection/DirectoryCollection.html#method_next", "name": "MockingMagician\\Organic\\Collection\\DirectoryCollection::next", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Collection\\DirectoryCollection", "fromLink": "MockingMagician/Organic/Collection/DirectoryCollection.html", "link": "MockingMagician/Organic/Collection/DirectoryCollection.html#method_key", "name": "MockingMagician\\Organic\\Collection\\DirectoryCollection::key", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Collection\\DirectoryCollection", "fromLink": "MockingMagician/Organic/Collection/DirectoryCollection.html", "link": "MockingMagician/Organic/Collection/DirectoryCollection.html#method_valid", "name": "MockingMagician\\Organic\\Collection\\DirectoryCollection::valid", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Collection\\DirectoryCollection", "fromLink": "MockingMagician/Organic/Collection/DirectoryCollection.html", "link": "MockingMagician/Organic/Collection/DirectoryCollection.html#method_rewind", "name": "MockingMagician\\Organic\\Collection\\DirectoryCollection::rewind", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\Collection", "fromLink": "MockingMagician/Organic/Collection.html", "link": "MockingMagician/Organic/Collection/FileCollection.html", "name": "MockingMagician\\Organic\\Collection\\FileCollection", "doc": "&quot;Class InodeCollection.&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\Collection\\FileCollection", "fromLink": "MockingMagician/Organic/Collection/FileCollection.html", "link": "MockingMagician/Organic/Collection/FileCollection.html#method___construct", "name": "MockingMagician\\Organic\\Collection\\FileCollection::__construct", "doc": "&quot;InodeCollection constructor.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Collection\\FileCollection", "fromLink": "MockingMagician/Organic/Collection/FileCollection.html", "link": "MockingMagician/Organic/Collection/FileCollection.html#method_createFromPaths", "name": "MockingMagician\\Organic\\Collection\\FileCollection::createFromPaths", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Collection\\FileCollection", "fromLink": "MockingMagician/Organic/Collection/FileCollection.html", "link": "MockingMagician/Organic/Collection/FileCollection.html#method_current", "name": "MockingMagician\\Organic\\Collection\\FileCollection::current", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Collection\\FileCollection", "fromLink": "MockingMagician/Organic/Collection/FileCollection.html", "link": "MockingMagician/Organic/Collection/FileCollection.html#method_next", "name": "MockingMagician\\Organic\\Collection\\FileCollection::next", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Collection\\FileCollection", "fromLink": "MockingMagician/Organic/Collection/FileCollection.html", "link": "MockingMagician/Organic/Collection/FileCollection.html#method_key", "name": "MockingMagician\\Organic\\Collection\\FileCollection::key", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Collection\\FileCollection", "fromLink": "MockingMagician/Organic/Collection/FileCollection.html", "link": "MockingMagician/Organic/Collection/FileCollection.html#method_valid", "name": "MockingMagician\\Organic\\Collection\\FileCollection::valid", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Collection\\FileCollection", "fromLink": "MockingMagician/Organic/Collection/FileCollection.html", "link": "MockingMagician/Organic/Collection/FileCollection.html#method_rewind", "name": "MockingMagician\\Organic\\Collection\\FileCollection::rewind", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\Collection", "fromLink": "MockingMagician/Organic/Collection.html", "link": "MockingMagician/Organic/Collection/InodeCollection.html", "name": "MockingMagician\\Organic\\Collection\\InodeCollection", "doc": "&quot;Class InodeCollection.&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\Collection\\InodeCollection", "fromLink": "MockingMagician/Organic/Collection/InodeCollection.html", "link": "MockingMagician/Organic/Collection/InodeCollection.html#method___construct", "name": "MockingMagician\\Organic\\Collection\\InodeCollection::__construct", "doc": "&quot;InodeCollection constructor.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Collection\\InodeCollection", "fromLink": "MockingMagician/Organic/Collection/InodeCollection.html", "link": "MockingMagician/Organic/Collection/InodeCollection.html#method_createFromPaths", "name": "MockingMagician\\Organic\\Collection\\InodeCollection::createFromPaths", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Collection\\InodeCollection", "fromLink": "MockingMagician/Organic/Collection/InodeCollection.html", "link": "MockingMagician/Organic/Collection/InodeCollection.html#method_current", "name": "MockingMagician\\Organic\\Collection\\InodeCollection::current", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Collection\\InodeCollection", "fromLink": "MockingMagician/Organic/Collection/InodeCollection.html", "link": "MockingMagician/Organic/Collection/InodeCollection.html#method_next", "name": "MockingMagician\\Organic\\Collection\\InodeCollection::next", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Collection\\InodeCollection", "fromLink": "MockingMagician/Organic/Collection/InodeCollection.html", "link": "MockingMagician/Organic/Collection/InodeCollection.html#method_key", "name": "MockingMagician\\Organic\\Collection\\InodeCollection::key", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Collection\\InodeCollection", "fromLink": "MockingMagician/Organic/Collection/InodeCollection.html", "link": "MockingMagician/Organic/Collection/InodeCollection.html#method_valid", "name": "MockingMagician\\Organic\\Collection\\InodeCollection::valid", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Collection\\InodeCollection", "fromLink": "MockingMagician/Organic/Collection/InodeCollection.html", "link": "MockingMagician/Organic/Collection/InodeCollection.html#method_rewind", "name": "MockingMagician\\Organic\\Collection\\InodeCollection::rewind", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\Exception", "fromLink": "MockingMagician/Organic/Exception.html", "link": "MockingMagician/Organic/Exception/CollectionValueException.html", "name": "MockingMagician\\Organic\\Exception\\CollectionValueException", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\Exception\\CollectionValueException", "fromLink": "MockingMagician/Organic/Exception/CollectionValueException.html", "link": "MockingMagician/Organic/Exception/CollectionValueException.html#method___construct", "name": "MockingMagician\\Organic\\Exception\\CollectionValueException::__construct", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\Exception", "fromLink": "MockingMagician/Organic/Exception.html", "link": "MockingMagician/Organic/Exception/DirectoryAlreadyExistException.html", "name": "MockingMagician\\Organic\\Exception\\DirectoryAlreadyExistException", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\Exception\\DirectoryAlreadyExistException", "fromLink": "MockingMagician/Organic/Exception/DirectoryAlreadyExistException.html", "link": "MockingMagician/Organic/Exception/DirectoryAlreadyExistException.html#method___construct", "name": "MockingMagician\\Organic\\Exception\\DirectoryAlreadyExistException::__construct", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\Exception", "fromLink": "MockingMagician/Organic/Exception.html", "link": "MockingMagician/Organic/Exception/DirectoryCreateException.html", "name": "MockingMagician\\Organic\\Exception\\DirectoryCreateException", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\Exception\\DirectoryCreateException", "fromLink": "MockingMagician/Organic/Exception/DirectoryCreateException.html", "link": "MockingMagician/Organic/Exception/DirectoryCreateException.html#method___construct", "name": "MockingMagician\\Organic\\Exception\\DirectoryCreateException::__construct", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\Exception", "fromLink": "MockingMagician/Organic/Exception.html", "link": "MockingMagician/Organic/Exception/DirectoryDeleteException.html", "name": "MockingMagician\\Organic\\Exception\\DirectoryDeleteException", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\Exception\\DirectoryDeleteException", "fromLink": "MockingMagician/Organic/Exception/DirectoryDeleteException.html", "link": "MockingMagician/Organic/Exception/DirectoryDeleteException.html#method___construct", "name": "MockingMagician\\Organic\\Exception\\DirectoryDeleteException::__construct", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\Exception", "fromLink": "MockingMagician/Organic/Exception.html", "link": "MockingMagician/Organic/Exception/DirectoryPathException.html", "name": "MockingMagician\\Organic\\Exception\\DirectoryPathException", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\Exception\\DirectoryPathException", "fromLink": "MockingMagician/Organic/Exception/DirectoryPathException.html", "link": "MockingMagician/Organic/Exception/DirectoryPathException.html#method___construct", "name": "MockingMagician\\Organic\\Exception\\DirectoryPathException::__construct", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\Exception", "fromLink": "MockingMagician/Organic/Exception.html", "link": "MockingMagician/Organic/Exception/FileAlreadyExistException.html", "name": "MockingMagician\\Organic\\Exception\\FileAlreadyExistException", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\Exception\\FileAlreadyExistException", "fromLink": "MockingMagician/Organic/Exception/FileAlreadyExistException.html", "link": "MockingMagician/Organic/Exception/FileAlreadyExistException.html#method___construct", "name": "MockingMagician\\Organic\\Exception\\FileAlreadyExistException::__construct", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\Exception", "fromLink": "MockingMagician/Organic/Exception.html", "link": "MockingMagician/Organic/Exception/FileCreateException.html", "name": "MockingMagician\\Organic\\Exception\\FileCreateException", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\Exception\\FileCreateException", "fromLink": "MockingMagician/Organic/Exception/FileCreateException.html", "link": "MockingMagician/Organic/Exception/FileCreateException.html#method___construct", "name": "MockingMagician\\Organic\\Exception\\FileCreateException::__construct", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\Exception", "fromLink": "MockingMagician/Organic/Exception.html", "link": "MockingMagician/Organic/Exception/FileDeleteException.html", "name": "MockingMagician\\Organic\\Exception\\FileDeleteException", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\Exception\\FileDeleteException", "fromLink": "MockingMagician/Organic/Exception/FileDeleteException.html", "link": "MockingMagician/Organic/Exception/FileDeleteException.html#method___construct", "name": "MockingMagician\\Organic\\Exception\\FileDeleteException::__construct", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\Exception", "fromLink": "MockingMagician/Organic/Exception.html", "link": "MockingMagician/Organic/Exception/FilePathException.html", "name": "MockingMagician\\Organic\\Exception\\FilePathException", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\Exception\\FilePathException", "fromLink": "MockingMagician/Organic/Exception/FilePathException.html", "link": "MockingMagician/Organic/Exception/FilePathException.html#method___construct", "name": "MockingMagician\\Organic\\Exception\\FilePathException::__construct", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\Exception", "fromLink": "MockingMagician/Organic/Exception.html", "link": "MockingMagician/Organic/Exception/IOException.html", "name": "MockingMagician\\Organic\\Exception\\IOException", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "MockingMagician\\Organic\\Exception", "fromLink": "MockingMagician/Organic/Exception.html", "link": "MockingMagician/Organic/Exception/InodeCreateLinkException.html", "name": "MockingMagician\\Organic\\Exception\\InodeCreateLinkException", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\Exception\\InodeCreateLinkException", "fromLink": "MockingMagician/Organic/Exception/InodeCreateLinkException.html", "link": "MockingMagician/Organic/Exception/InodeCreateLinkException.html#method___construct", "name": "MockingMagician\\Organic\\Exception\\InodeCreateLinkException::__construct", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\Exception", "fromLink": "MockingMagician/Organic/Exception.html", "link": "MockingMagician/Organic/Exception/InodeMoveToException.html", "name": "MockingMagician\\Organic\\Exception\\InodeMoveToException", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\Exception\\InodeMoveToException", "fromLink": "MockingMagician/Organic/Exception/InodeMoveToException.html", "link": "MockingMagician/Organic/Exception/InodeMoveToException.html#method___construct", "name": "MockingMagician\\Organic\\Exception\\InodeMoveToException::__construct", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\Exception", "fromLink": "MockingMagician/Organic/Exception.html", "link": "MockingMagician/Organic/Exception/InodePathException.html", "name": "MockingMagician\\Organic\\Exception\\InodePathException", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\Exception\\InodePathException", "fromLink": "MockingMagician/Organic/Exception/InodePathException.html", "link": "MockingMagician/Organic/Exception/InodePathException.html#method___construct", "name": "MockingMagician\\Organic\\Exception\\InodePathException::__construct", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\FS", "fromLink": "MockingMagician/Organic/FS.html", "link": "MockingMagician/Organic/FS/FSIterator.html", "name": "MockingMagician\\Organic\\FS\\FSIterator", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\FS\\FSIterator", "fromLink": "MockingMagician/Organic/FS/FSIterator.html", "link": "MockingMagician/Organic/FS/FSIterator.html#method___construct", "name": "MockingMagician\\Organic\\FS\\FSIterator::__construct", "doc": "&quot;FSIterator constructor.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\FS\\FSIterator", "fromLink": "MockingMagician/Organic/FS/FSIterator.html", "link": "MockingMagician/Organic/FS/FSIterator.html#method_getIterator", "name": "MockingMagician\\Organic\\FS\\FSIterator::getIterator", "doc": "&quot;Retrieve an external iterator.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\FS\\FSIterator", "fromLink": "MockingMagician/Organic/FS/FSIterator.html", "link": "MockingMagician/Organic/FS/FSIterator.html#method_scanDir", "name": "MockingMagician\\Organic\\FS\\FSIterator::scanDir", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\FS", "fromLink": "MockingMagician/Organic/FS.html", "link": "MockingMagician/Organic/FS/FSIteratorOnlyDir.html", "name": "MockingMagician\\Organic\\FS\\FSIteratorOnlyDir", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\FS\\FSIteratorOnlyDir", "fromLink": "MockingMagician/Organic/FS/FSIteratorOnlyDir.html", "link": "MockingMagician/Organic/FS/FSIteratorOnlyDir.html#method_getIterator", "name": "MockingMagician\\Organic\\FS\\FSIteratorOnlyDir::getIterator", "doc": "&quot;Retrieve an external iterator.&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\FS", "fromLink": "MockingMagician/Organic/FS.html", "link": "MockingMagician/Organic/FS/FSIteratorOnlyFiles.html", "name": "MockingMagician\\Organic\\FS\\FSIteratorOnlyFiles", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\FS\\FSIteratorOnlyFiles", "fromLink": "MockingMagician/Organic/FS/FSIteratorOnlyFiles.html", "link": "MockingMagician/Organic/FS/FSIteratorOnlyFiles.html#method_getIterator", "name": "MockingMagician\\Organic\\FS\\FSIteratorOnlyFiles::getIterator", "doc": "&quot;Retrieve an external iterator.&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\Facade", "fromLink": "MockingMagician/Organic/Facade.html", "link": "MockingMagician/Organic/Facade/FileSystem.html", "name": "MockingMagician\\Organic\\Facade\\FileSystem", "doc": "&quot;Class FileSystem.&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\Facade\\FileSystem", "fromLink": "MockingMagician/Organic/Facade/FileSystem.html", "link": "MockingMagician/Organic/Facade/FileSystem.html#method_createPermissionFromMode", "name": "MockingMagician\\Organic\\Facade\\FileSystem::createPermissionFromMode", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Facade\\FileSystem", "fromLink": "MockingMagician/Organic/Facade/FileSystem.html", "link": "MockingMagician/Organic/Facade/FileSystem.html#method_getFile", "name": "MockingMagician\\Organic\\Facade\\FileSystem::getFile", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Facade\\FileSystem", "fromLink": "MockingMagician/Organic/Facade/FileSystem.html", "link": "MockingMagician/Organic/Facade/FileSystem.html#method_newFile", "name": "MockingMagician\\Organic\\Facade\\FileSystem::newFile", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Facade\\FileSystem", "fromLink": "MockingMagician/Organic/Facade/FileSystem.html", "link": "MockingMagician/Organic/Facade/FileSystem.html#method_getDirectory", "name": "MockingMagician\\Organic\\Facade\\FileSystem::getDirectory", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Facade\\FileSystem", "fromLink": "MockingMagician/Organic/Facade/FileSystem.html", "link": "MockingMagician/Organic/Facade/FileSystem.html#method_newDirectory", "name": "MockingMagician\\Organic\\Facade\\FileSystem::newDirectory", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\Helper", "fromLink": "MockingMagician/Organic/Helper.html", "link": "MockingMagician/Organic/Helper/Collection.html", "name": "MockingMagician\\Organic\\Helper\\Collection", "doc": "&quot;Class Collection.&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\Helper\\Collection", "fromLink": "MockingMagician/Organic/Helper/Collection.html", "link": "MockingMagician/Organic/Helper/Collection.html#method___construct", "name": "MockingMagician\\Organic\\Helper\\Collection::__construct", "doc": "&quot;Collection constructor.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Helper\\Collection", "fromLink": "MockingMagician/Organic/Helper/Collection.html", "link": "MockingMagician/Organic/Helper/Collection.html#method_isAcceptableValue", "name": "MockingMagician\\Organic\\Helper\\Collection::isAcceptableValue", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Helper\\Collection", "fromLink": "MockingMagician/Organic/Helper/Collection.html", "link": "MockingMagician/Organic/Helper/Collection.html#method_add", "name": "MockingMagician\\Organic\\Helper\\Collection::add", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Helper\\Collection", "fromLink": "MockingMagician/Organic/Helper/Collection.html", "link": "MockingMagician/Organic/Helper/Collection.html#method_remove", "name": "MockingMagician\\Organic\\Helper\\Collection::remove", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Helper\\Collection", "fromLink": "MockingMagician/Organic/Helper/Collection.html", "link": "MockingMagician/Organic/Helper/Collection.html#method_clear", "name": "MockingMagician\\Organic\\Helper\\Collection::clear", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Helper\\Collection", "fromLink": "MockingMagician/Organic/Helper/Collection.html", "link": "MockingMagician/Organic/Helper/Collection.html#method_count", "name": "MockingMagician\\Organic\\Helper\\Collection::count", "doc": "&quot;Count elements of an object.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Helper\\Collection", "fromLink": "MockingMagician/Organic/Helper/Collection.html", "link": "MockingMagician/Organic/Helper/Collection.html#method_getIterator", "name": "MockingMagician\\Organic\\Helper\\Collection::getIterator", "doc": "&quot;Retrieve an external iterator.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Helper\\Collection", "fromLink": "MockingMagician/Organic/Helper/Collection.html", "link": "MockingMagician/Organic/Helper/Collection.html#method_equals", "name": "MockingMagician\\Organic\\Helper\\Collection::equals", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\Helper", "fromLink": "MockingMagician/Organic/Helper.html", "link": "MockingMagician/Organic/Helper/CollectionInterface.html", "name": "MockingMagician\\Organic\\Helper\\CollectionInterface", "doc": "&quot;Interface CollectionInterface.&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\Helper\\CollectionInterface", "fromLink": "MockingMagician/Organic/Helper/CollectionInterface.html", "link": "MockingMagician/Organic/Helper/CollectionInterface.html#method_add", "name": "MockingMagician\\Organic\\Helper\\CollectionInterface::add", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Helper\\CollectionInterface", "fromLink": "MockingMagician/Organic/Helper/CollectionInterface.html", "link": "MockingMagician/Organic/Helper/CollectionInterface.html#method_remove", "name": "MockingMagician\\Organic\\Helper\\CollectionInterface::remove", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Helper\\CollectionInterface", "fromLink": "MockingMagician/Organic/Helper/CollectionInterface.html", "link": "MockingMagician/Organic/Helper/CollectionInterface.html#method_clear", "name": "MockingMagician\\Organic\\Helper\\CollectionInterface::clear", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Helper\\CollectionInterface", "fromLink": "MockingMagician/Organic/Helper/CollectionInterface.html", "link": "MockingMagician/Organic/Helper/CollectionInterface.html#method_isAcceptableValue", "name": "MockingMagician\\Organic\\Helper\\CollectionInterface::isAcceptableValue", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Helper\\CollectionInterface", "fromLink": "MockingMagician/Organic/Helper/CollectionInterface.html", "link": "MockingMagician/Organic/Helper/CollectionInterface.html#method_equals", "name": "MockingMagician\\Organic\\Helper\\CollectionInterface::equals", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\Helper", "fromLink": "MockingMagician/Organic/Helper.html", "link": "MockingMagician/Organic/Helper/Path.html", "name": "MockingMagician\\Organic\\Helper\\Path", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\Helper\\Path", "fromLink": "MockingMagician/Organic/Helper/Path.html", "link": "MockingMagician/Organic/Helper/Path.html#method_clean", "name": "MockingMagician\\Organic\\Helper\\Path::clean", "doc": "&quot;There is a method that deal with Sven Arduwie proposal https:\/\/www.php.net\/manual\/en\/function.realpath.php#84012\nAnd runeimp at gmail dot com proposal https:\/\/www.php.net\/manual\/en\/function.realpath.php#112367.&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\IO", "fromLink": "MockingMagician/Organic/IO.html", "link": "MockingMagician/Organic/IO/IOFile.html", "name": "MockingMagician\\Organic\\IO\\IOFile", "doc": "&quot;Class IOFile.&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFile", "fromLink": "MockingMagician/Organic/IO/IOFile.html", "link": "MockingMagician/Organic/IO/IOFile.html#method___construct", "name": "MockingMagician\\Organic\\IO\\IOFile::__construct", "doc": "&quot;ReadWriteFileInterface constructor.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFile", "fromLink": "MockingMagician/Organic/IO/IOFile.html", "link": "MockingMagician/Organic/IO/IOFile.html#method___destruct", "name": "MockingMagician\\Organic\\IO\\IOFile::__destruct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFile", "fromLink": "MockingMagician/Organic/IO/IOFile.html", "link": "MockingMagician/Organic/IO/IOFile.html#method_eof", "name": "MockingMagician\\Organic\\IO\\IOFile::eof", "doc": "&quot;Determine whether the end of file has been reached.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFile", "fromLink": "MockingMagician/Organic/IO/IOFile.html", "link": "MockingMagician/Organic/IO/IOFile.html#method_flush", "name": "MockingMagician\\Organic\\IO\\IOFile::flush", "doc": "&quot;Forces a write of all buffered output to the file.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFile", "fromLink": "MockingMagician/Organic/IO/IOFile.html", "link": "MockingMagician/Organic/IO/IOFile.html#method_getChar", "name": "MockingMagician\\Organic\\IO\\IOFile::getChar", "doc": "&quot;Gets a character from the file.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFile", "fromLink": "MockingMagician/Organic/IO/IOFile.html", "link": "MockingMagician/Organic/IO/IOFile.html#method_getCurrentLine", "name": "MockingMagician\\Organic\\IO\\IOFile::getCurrentLine", "doc": "&quot;Returns a string containing the next line from the file.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFile", "fromLink": "MockingMagician/Organic/IO/IOFile.html", "link": "MockingMagician/Organic/IO/IOFile.html#method_lock", "name": "MockingMagician\\Organic\\IO\\IOFile::lock", "doc": "&quot;Locks or unlocks the file in the same portable way as flock().&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFile", "fromLink": "MockingMagician/Organic/IO/IOFile.html", "link": "MockingMagician/Organic/IO/IOFile.html#method_passThrough", "name": "MockingMagician\\Organic\\IO\\IOFile::passThrough", "doc": "&quot;Reads to EOF on the given file pointer from the current position and writes the results to the output buffer.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFile", "fromLink": "MockingMagician/Organic/IO/IOFile.html", "link": "MockingMagician/Organic/IO/IOFile.html#method_read", "name": "MockingMagician\\Organic\\IO\\IOFile::read", "doc": "&quot;Reads the given number of bytes from the file.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFile", "fromLink": "MockingMagician/Organic/IO/IOFile.html", "link": "MockingMagician/Organic/IO/IOFile.html#method_scanFormat", "name": "MockingMagician\\Organic\\IO\\IOFile::scanFormat", "doc": "&quot;Reads a line from the file and interprets it according to the specified format, which is described in the\ndocumentation for sprintf().&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFile", "fromLink": "MockingMagician/Organic/IO/IOFile.html", "link": "MockingMagician/Organic/IO/IOFile.html#method_seek", "name": "MockingMagician\\Organic\\IO\\IOFile::seek", "doc": "&quot;Seek to a position in the file measured in bytes from the beginning of the file, obtained by adding offset to\nthe position specified by whence.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFile", "fromLink": "MockingMagician/Organic/IO/IOFile.html", "link": "MockingMagician/Organic/IO/IOFile.html#method_tell", "name": "MockingMagician\\Organic\\IO\\IOFile::tell", "doc": "&quot;Return current file position.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFile", "fromLink": "MockingMagician/Organic/IO/IOFile.html", "link": "MockingMagician/Organic/IO/IOFile.html#method_truncate", "name": "MockingMagician\\Organic\\IO\\IOFile::truncate", "doc": "&quot;Truncates the file to size bytes.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFile", "fromLink": "MockingMagician/Organic/IO/IOFile.html", "link": "MockingMagician/Organic/IO/IOFile.html#method_write", "name": "MockingMagician\\Organic\\IO\\IOFile::write", "doc": "&quot;Writes the contents of string to the file\nIf the length argument is given, writing will stop after length bytes have been written\nor the end of string is reached, whichever comes first.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFile", "fromLink": "MockingMagician/Organic/IO/IOFile.html", "link": "MockingMagician/Organic/IO/IOFile.html#method_getContent", "name": "MockingMagician\\Organic\\IO\\IOFile::getContent", "doc": "&quot;Reads entire file into a string\nIt close the internal file handler before calling file_get_contents()\nand after operate reopen a new one with the same parameters.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFile", "fromLink": "MockingMagician/Organic/IO/IOFile.html", "link": "MockingMagician/Organic/IO/IOFile.html#method_putContent", "name": "MockingMagician\\Organic\\IO\\IOFile::putContent", "doc": "&quot;Write data to the file\nIt close the internal file handler before calling file_put_contents()\nand after operate reopen a new one with the same parameters\nfile_put_contents() is called with LOCK_EX.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFile", "fromLink": "MockingMagician/Organic/IO/IOFile.html", "link": "MockingMagician/Organic/IO/IOFile.html#method_addContent", "name": "MockingMagician\\Organic\\IO\\IOFile::addContent", "doc": "&quot;Append data to the file\nIt close the internal file handler before calling file_put_contents()\nand after operate reopen a new one with the same parameters\nfile_put_contents() is called with LOCK_EX | LOCK_APPEND.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFile", "fromLink": "MockingMagician/Organic/IO/IOFile.html", "link": "MockingMagician/Organic/IO/IOFile.html#method_openHandler", "name": "MockingMagician\\Organic\\IO\\IOFile::openHandler", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFile", "fromLink": "MockingMagician/Organic/IO/IOFile.html", "link": "MockingMagician/Organic/IO/IOFile.html#method_closeHandler", "name": "MockingMagician\\Organic\\IO\\IOFile::closeHandler", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\IO", "fromLink": "MockingMagician/Organic/IO.html", "link": "MockingMagician/Organic/IO/IOFileAwareInterface.html", "name": "MockingMagician\\Organic\\IO\\IOFileAwareInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileAwareInterface", "fromLink": "MockingMagician/Organic/IO/IOFileAwareInterface.html", "link": "MockingMagician/Organic/IO/IOFileAwareInterface.html#method_getIO", "name": "MockingMagician\\Organic\\IO\\IOFileAwareInterface::getIO", "doc": "&quot;Get an interface for read or write in file.&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\IO", "fromLink": "MockingMagician/Organic/IO.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html", "name": "MockingMagician\\Organic\\IO\\IOFileInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileInterface", "fromLink": "MockingMagician/Organic/IO/IOFileInterface.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html#method_eof", "name": "MockingMagician\\Organic\\IO\\IOFileInterface::eof", "doc": "&quot;Determine whether the end of file has been reached.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileInterface", "fromLink": "MockingMagician/Organic/IO/IOFileInterface.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html#method_flush", "name": "MockingMagician\\Organic\\IO\\IOFileInterface::flush", "doc": "&quot;Forces a write of all buffered output to the file.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileInterface", "fromLink": "MockingMagician/Organic/IO/IOFileInterface.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html#method_getChar", "name": "MockingMagician\\Organic\\IO\\IOFileInterface::getChar", "doc": "&quot;Gets a character from the file.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileInterface", "fromLink": "MockingMagician/Organic/IO/IOFileInterface.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html#method_getCurrentLine", "name": "MockingMagician\\Organic\\IO\\IOFileInterface::getCurrentLine", "doc": "&quot;Returns a string containing the current line from the file.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileInterface", "fromLink": "MockingMagician/Organic/IO/IOFileInterface.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html#method_lock", "name": "MockingMagician\\Organic\\IO\\IOFileInterface::lock", "doc": "&quot;Locks or unlocks the file in the same portable way as flock().&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileInterface", "fromLink": "MockingMagician/Organic/IO/IOFileInterface.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html#method_passThrough", "name": "MockingMagician\\Organic\\IO\\IOFileInterface::passThrough", "doc": "&quot;Reads to EOF on the given file pointer from the current position and writes the results to the output buffer.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileInterface", "fromLink": "MockingMagician/Organic/IO/IOFileInterface.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html#method_read", "name": "MockingMagician\\Organic\\IO\\IOFileInterface::read", "doc": "&quot;Reads the given number of bytes from the file.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileInterface", "fromLink": "MockingMagician/Organic/IO/IOFileInterface.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html#method_scanFormat", "name": "MockingMagician\\Organic\\IO\\IOFileInterface::scanFormat", "doc": "&quot;Reads a line from the file and interprets it according to the specified format, which is described in the\ndocumentation for sprintf().&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileInterface", "fromLink": "MockingMagician/Organic/IO/IOFileInterface.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html#method_seek", "name": "MockingMagician\\Organic\\IO\\IOFileInterface::seek", "doc": "&quot;Seek to a position in the file measured in bytes from the beginning of the file, obtained by adding offset to\nthe position specified by whence.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileInterface", "fromLink": "MockingMagician/Organic/IO/IOFileInterface.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html#method_tell", "name": "MockingMagician\\Organic\\IO\\IOFileInterface::tell", "doc": "&quot;Return current file position.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileInterface", "fromLink": "MockingMagician/Organic/IO/IOFileInterface.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html#method_truncate", "name": "MockingMagician\\Organic\\IO\\IOFileInterface::truncate", "doc": "&quot;Truncates the file to size bytes.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileInterface", "fromLink": "MockingMagician/Organic/IO/IOFileInterface.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html#method_write", "name": "MockingMagician\\Organic\\IO\\IOFileInterface::write", "doc": "&quot;Writes the contents of string to the file\nIf the length argument is given, writing will stop after length bytes have been written\nor the end of string is reached, whichever comes first.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileInterface", "fromLink": "MockingMagician/Organic/IO/IOFileInterface.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html#method_getContent", "name": "MockingMagician\\Organic\\IO\\IOFileInterface::getContent", "doc": "&quot;Reads entire file into a string\nIt close the internal file handler before calling file_get_contents()\nand after operate reopen a new one with the same parameters.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileInterface", "fromLink": "MockingMagician/Organic/IO/IOFileInterface.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html#method_putContent", "name": "MockingMagician\\Organic\\IO\\IOFileInterface::putContent", "doc": "&quot;Write data to the file\nIt close the internal file handler before calling file_put_contents()\nand after operate reopen a new one with the same parameters\nfile_put_contents() is called with LOCK_EX.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\IO\\IOFileInterface", "fromLink": "MockingMagician/Organic/IO/IOFileInterface.html", "link": "MockingMagician/Organic/IO/IOFileInterface.html#method_addContent", "name": "MockingMagician\\Organic\\IO\\IOFileInterface::addContent", "doc": "&quot;Append data to the file\nIt close the internal file handler before calling file_put_contents()\nand after operate reopen a new one with the same parameters\nfile_put_contents() is called with LOCK_EX | LOCK_APPEND.&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\Inode\\Base", "fromLink": "MockingMagician/Organic/Inode/Base.html", "link": "MockingMagician/Organic/Inode/Base/AbstractInode.html", "name": "MockingMagician\\Organic\\Inode\\Base\\AbstractInode", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\AbstractInode", "fromLink": "MockingMagician/Organic/Inode/Base/AbstractInode.html", "link": "MockingMagician/Organic/Inode/Base/AbstractInode.html#method_moveTo", "name": "MockingMagician\\Organic\\Inode\\Base\\AbstractInode::moveTo", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\AbstractInode", "fromLink": "MockingMagician/Organic/Inode/Base/AbstractInode.html", "link": "MockingMagician/Organic/Inode/Base/AbstractInode.html#method_createLink", "name": "MockingMagician\\Organic\\Inode\\Base\\AbstractInode::createLink", "doc": "&quot;Create a symlink.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\AbstractInode", "fromLink": "MockingMagician/Organic/Inode/Base/AbstractInode.html", "link": "MockingMagician/Organic/Inode/Base/AbstractInode.html#method_create", "name": "MockingMagician\\Organic\\Inode\\Base\\AbstractInode::create", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\AbstractInode", "fromLink": "MockingMagician/Organic/Inode/Base/AbstractInode.html", "link": "MockingMagician/Organic/Inode/Base/AbstractInode.html#method_delete", "name": "MockingMagician\\Organic\\Inode\\Base\\AbstractInode::delete", "doc": "&quot;Delete the inode. An inode is a file or a directory.&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\Inode\\Base", "fromLink": "MockingMagician/Organic/Inode/Base.html", "link": "MockingMagician/Organic/Inode/Base/FileInfo.html", "name": "MockingMagician\\Organic\\Inode\\Base\\FileInfo", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\FileInfo", "fromLink": "MockingMagician/Organic/Inode/Base/FileInfo.html", "link": "MockingMagician/Organic/Inode/Base/FileInfo.html#method___construct", "name": "MockingMagician\\Organic\\Inode\\Base\\FileInfo::__construct", "doc": "&quot;FileInfo constructor.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\FileInfo", "fromLink": "MockingMagician/Organic/Inode/Base/FileInfo.html", "link": "MockingMagician/Organic/Inode/Base/FileInfo.html#method___toString", "name": "MockingMagician\\Organic\\Inode\\Base\\FileInfo::__toString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\FileInfo", "fromLink": "MockingMagician/Organic/Inode/Base/FileInfo.html", "link": "MockingMagician/Organic/Inode/Base/FileInfo.html#method_getObjectPath", "name": "MockingMagician\\Organic\\Inode\\Base\\FileInfo::getObjectPath", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\FileInfo", "fromLink": "MockingMagician/Organic/Inode/Base/FileInfo.html", "link": "MockingMagician/Organic/Inode/Base/FileInfo.html#method_getRealPath", "name": "MockingMagician\\Organic\\Inode\\Base\\FileInfo::getRealPath", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\FileInfo", "fromLink": "MockingMagician/Organic/Inode/Base/FileInfo.html", "link": "MockingMagician/Organic/Inode/Base/FileInfo.html#method_getDirectoryContainerPath", "name": "MockingMagician\\Organic\\Inode\\Base\\FileInfo::getDirectoryContainerPath", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\FileInfo", "fromLink": "MockingMagician/Organic/Inode/Base/FileInfo.html", "link": "MockingMagician/Organic/Inode/Base/FileInfo.html#method_getName", "name": "MockingMagician\\Organic\\Inode\\Base\\FileInfo::getName", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\FileInfo", "fromLink": "MockingMagician/Organic/Inode/Base/FileInfo.html", "link": "MockingMagician/Organic/Inode/Base/FileInfo.html#method_getExtension", "name": "MockingMagician\\Organic\\Inode\\Base\\FileInfo::getExtension", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\FileInfo", "fromLink": "MockingMagician/Organic/Inode/Base/FileInfo.html", "link": "MockingMagician/Organic/Inode/Base/FileInfo.html#method_isFile", "name": "MockingMagician\\Organic\\Inode\\Base\\FileInfo::isFile", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\FileInfo", "fromLink": "MockingMagician/Organic/Inode/Base/FileInfo.html", "link": "MockingMagician/Organic/Inode/Base/FileInfo.html#method_isDirectory", "name": "MockingMagician\\Organic\\Inode\\Base\\FileInfo::isDirectory", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\FileInfo", "fromLink": "MockingMagician/Organic/Inode/Base/FileInfo.html", "link": "MockingMagician/Organic/Inode/Base/FileInfo.html#method_isLink", "name": "MockingMagician\\Organic\\Inode\\Base\\FileInfo::isLink", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\FileInfo", "fromLink": "MockingMagician/Organic/Inode/Base/FileInfo.html", "link": "MockingMagician/Organic/Inode/Base/FileInfo.html#method_isReadable", "name": "MockingMagician\\Organic\\Inode\\Base\\FileInfo::isReadable", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\FileInfo", "fromLink": "MockingMagician/Organic/Inode/Base/FileInfo.html", "link": "MockingMagician/Organic/Inode/Base/FileInfo.html#method_isWritable", "name": "MockingMagician\\Organic\\Inode\\Base\\FileInfo::isWritable", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\FileInfo", "fromLink": "MockingMagician/Organic/Inode/Base/FileInfo.html", "link": "MockingMagician/Organic/Inode/Base/FileInfo.html#method_isExecutable", "name": "MockingMagician\\Organic\\Inode\\Base\\FileInfo::isExecutable", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\FileInfo", "fromLink": "MockingMagician/Organic/Inode/Base/FileInfo.html", "link": "MockingMagician/Organic/Inode/Base/FileInfo.html#method_getSize", "name": "MockingMagician\\Organic\\Inode\\Base\\FileInfo::getSize", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\FileInfo", "fromLink": "MockingMagician/Organic/Inode/Base/FileInfo.html", "link": "MockingMagician/Organic/Inode/Base/FileInfo.html#method_getAccessTime", "name": "MockingMagician\\Organic\\Inode\\Base\\FileInfo::getAccessTime", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\FileInfo", "fromLink": "MockingMagician/Organic/Inode/Base/FileInfo.html", "link": "MockingMagician/Organic/Inode/Base/FileInfo.html#method_getModificationTime", "name": "MockingMagician\\Organic\\Inode\\Base\\FileInfo::getModificationTime", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\FileInfo", "fromLink": "MockingMagician/Organic/Inode/Base/FileInfo.html", "link": "MockingMagician/Organic/Inode/Base/FileInfo.html#method_getChangeTime", "name": "MockingMagician\\Organic\\Inode\\Base\\FileInfo::getChangeTime", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\FileInfo", "fromLink": "MockingMagician/Organic/Inode/Base/FileInfo.html", "link": "MockingMagician/Organic/Inode/Base/FileInfo.html#method_getPermissions", "name": "MockingMagician\\Organic\\Inode\\Base\\FileInfo::getPermissions", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\FileInfo", "fromLink": "MockingMagician/Organic/Inode/Base/FileInfo.html", "link": "MockingMagician/Organic/Inode/Base/FileInfo.html#method_serialize", "name": "MockingMagician\\Organic\\Inode\\Base\\FileInfo::serialize", "doc": "&quot;String representation of object.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\FileInfo", "fromLink": "MockingMagician/Organic/Inode/Base/FileInfo.html", "link": "MockingMagician/Organic/Inode/Base/FileInfo.html#method_unserialize", "name": "MockingMagician\\Organic\\Inode\\Base\\FileInfo::unserialize", "doc": "&quot;Constructs the object.&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\Inode\\Base", "fromLink": "MockingMagician/Organic/Inode/Base.html", "link": "MockingMagician/Organic/Inode/Base/InodeInterface.html", "name": "MockingMagician\\Organic\\Inode\\Base\\InodeInterface", "doc": "&quot;Interface InodeInterface.&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\InodeInterface", "fromLink": "MockingMagician/Organic/Inode/Base/InodeInterface.html", "link": "MockingMagician/Organic/Inode/Base/InodeInterface.html#method_create", "name": "MockingMagician\\Organic\\Inode\\Base\\InodeInterface::create", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\InodeInterface", "fromLink": "MockingMagician/Organic/Inode/Base/InodeInterface.html", "link": "MockingMagician/Organic/Inode/Base/InodeInterface.html#method_moveTo", "name": "MockingMagician\\Organic\\Inode\\Base\\InodeInterface::moveTo", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\InodeInterface", "fromLink": "MockingMagician/Organic/Inode/Base/InodeInterface.html", "link": "MockingMagician/Organic/Inode/Base/InodeInterface.html#method_delete", "name": "MockingMagician\\Organic\\Inode\\Base\\InodeInterface::delete", "doc": "&quot;Delete the inode. An inode is a file or a directory.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Base\\InodeInterface", "fromLink": "MockingMagician/Organic/Inode/Base/InodeInterface.html", "link": "MockingMagician/Organic/Inode/Base/InodeInterface.html#method_createLink", "name": "MockingMagician\\Organic\\Inode\\Base\\InodeInterface::createLink", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\Inode", "fromLink": "MockingMagician/Organic/Inode.html", "link": "MockingMagician/Organic/Inode/Directory.html", "name": "MockingMagician\\Organic\\Inode\\Directory", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Directory", "fromLink": "MockingMagician/Organic/Inode/Directory.html", "link": "MockingMagician/Organic/Inode/Directory.html#method___construct", "name": "MockingMagician\\Organic\\Inode\\Directory::__construct", "doc": "&quot;Directory constructor.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Directory", "fromLink": "MockingMagician/Organic/Inode/Directory.html", "link": "MockingMagician/Organic/Inode/Directory.html#method_create", "name": "MockingMagician\\Organic\\Inode\\Directory::create", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Directory", "fromLink": "MockingMagician/Organic/Inode/Directory.html", "link": "MockingMagician/Organic/Inode/Directory.html#method_delete", "name": "MockingMagician\\Organic\\Inode\\Directory::delete", "doc": "&quot;Delete the inode. An inode is a file or a directory.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Directory", "fromLink": "MockingMagician/Organic/Inode/Directory.html", "link": "MockingMagician/Organic/Inode/Directory.html#method_getInodes", "name": "MockingMagician\\Organic\\Inode\\Directory::getInodes", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Directory", "fromLink": "MockingMagician/Organic/Inode/Directory.html", "link": "MockingMagician/Organic/Inode/Directory.html#method_getFiles", "name": "MockingMagician\\Organic\\Inode\\Directory::getFiles", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\Directory", "fromLink": "MockingMagician/Organic/Inode/Directory.html", "link": "MockingMagician/Organic/Inode/Directory.html#method_getDirectories", "name": "MockingMagician\\Organic\\Inode\\Directory::getDirectories", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\Inode", "fromLink": "MockingMagician/Organic/Inode.html", "link": "MockingMagician/Organic/Inode/File.html", "name": "MockingMagician\\Organic\\Inode\\File", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\File", "fromLink": "MockingMagician/Organic/Inode/File.html", "link": "MockingMagician/Organic/Inode/File.html#method___construct", "name": "MockingMagician\\Organic\\Inode\\File::__construct", "doc": "&quot;File constructor.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\File", "fromLink": "MockingMagician/Organic/Inode/File.html", "link": "MockingMagician/Organic/Inode/File.html#method_delete", "name": "MockingMagician\\Organic\\Inode\\File::delete", "doc": "&quot;Delete the inode. An inode is a file or a directory.&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\File", "fromLink": "MockingMagician/Organic/Inode/File.html", "link": "MockingMagician/Organic/Inode/File.html#method_create", "name": "MockingMagician\\Organic\\Inode\\File::create", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Inode\\File", "fromLink": "MockingMagician/Organic/Inode/File.html", "link": "MockingMagician/Organic/Inode/File.html#method_getIO", "name": "MockingMagician\\Organic\\Inode\\File::getIO", "doc": "&quot;Get an interface for IO on file.&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\Permission", "fromLink": "MockingMagician/Organic/Permission.html", "link": "MockingMagician/Organic/Permission/Permission.html", "name": "MockingMagician\\Organic\\Permission\\Permission", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\Permission\\Permission", "fromLink": "MockingMagician/Organic/Permission/Permission.html", "link": "MockingMagician/Organic/Permission/Permission.html#method___construct", "name": "MockingMagician\\Organic\\Permission\\Permission::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Permission\\Permission", "fromLink": "MockingMagician/Organic/Permission/Permission.html", "link": "MockingMagician/Organic/Permission/Permission.html#method_getUser", "name": "MockingMagician\\Organic\\Permission\\Permission::getUser", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Permission\\Permission", "fromLink": "MockingMagician/Organic/Permission/Permission.html", "link": "MockingMagician/Organic/Permission/Permission.html#method_getGroup", "name": "MockingMagician\\Organic\\Permission\\Permission::getGroup", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Permission\\Permission", "fromLink": "MockingMagician/Organic/Permission/Permission.html", "link": "MockingMagician/Organic/Permission/Permission.html#method_getOthers", "name": "MockingMagician\\Organic\\Permission\\Permission::getOthers", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Permission\\Permission", "fromLink": "MockingMagician/Organic/Permission/Permission.html", "link": "MockingMagician/Organic/Permission/Permission.html#method_getMode", "name": "MockingMagician\\Organic\\Permission\\Permission::getMode", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\Permission", "fromLink": "MockingMagician/Organic/Permission.html", "link": "MockingMagician/Organic/Permission/PermissionFactory.html", "name": "MockingMagician\\Organic\\Permission\\PermissionFactory", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\Permission\\PermissionFactory", "fromLink": "MockingMagician/Organic/Permission/PermissionFactory.html", "link": "MockingMagician/Organic/Permission/PermissionFactory.html#method_createFromMode", "name": "MockingMagician\\Organic\\Permission\\PermissionFactory::createFromMode", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Permission\\PermissionFactory", "fromLink": "MockingMagician/Organic/Permission/PermissionFactory.html", "link": "MockingMagician/Organic/Permission/PermissionFactory.html#method_defaultDirectory", "name": "MockingMagician\\Organic\\Permission\\PermissionFactory::defaultDirectory", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Permission\\PermissionFactory", "fromLink": "MockingMagician/Organic/Permission/PermissionFactory.html", "link": "MockingMagician/Organic/Permission/PermissionFactory.html#method_defaultFile", "name": "MockingMagician\\Organic\\Permission\\PermissionFactory::defaultFile", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "MockingMagician\\Organic\\Permission", "fromLink": "MockingMagician/Organic/Permission.html", "link": "MockingMagician/Organic/Permission/PermissionScope.html", "name": "MockingMagician\\Organic\\Permission\\PermissionScope", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "MockingMagician\\Organic\\Permission\\PermissionScope", "fromLink": "MockingMagician/Organic/Permission/PermissionScope.html", "link": "MockingMagician/Organic/Permission/PermissionScope.html#method___construct", "name": "MockingMagician\\Organic\\Permission\\PermissionScope::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "MockingMagician\\Organic\\Permission\\PermissionScope", "fromLink": "MockingMagician/Organic/Permission/PermissionScope.html", "link": "MockingMagician/Organic/Permission/PermissionScope.html#method_getP", "name": "MockingMagician\\Organic\\Permission\\PermissionScope::getP", "doc": "&quot;&quot;"},
            
            
                                        // Fix trailing commas in the index
        {}
    ];

    /** Tokenizes strings by namespaces and functions */
    function tokenizer(term) {
        if (!term) {
            return [];
        }

        var tokens = [term];
        var meth = term.indexOf('::');

        // Split tokens into methods if "::" is found.
        if (meth > -1) {
            tokens.push(term.substr(meth + 2));
            term = term.substr(0, meth - 2);
        }

        // Split by namespace or fake namespace.
        if (term.indexOf('\\') > -1) {
            tokens = tokens.concat(term.split('\\'));
        } else if (term.indexOf('_') > 0) {
            tokens = tokens.concat(term.split('_'));
        }

        // Merge in splitting the string by case and return
        tokens = tokens.concat(term.match(/(([A-Z]?[^A-Z]*)|([a-z]?[^a-z]*))/g).slice(0,-1));

        return tokens;
    };

    root.Sami = {
        /**
         * Cleans the provided term. If no term is provided, then one is
         * grabbed from the query string "search" parameter.
         */
        cleanSearchTerm: function(term) {
            // Grab from the query string
            if (typeof term === 'undefined') {
                var name = 'search';
                var regex = new RegExp("[\\?&]" + name + "=([^&#]*)");
                var results = regex.exec(location.search);
                if (results === null) {
                    return null;
                }
                term = decodeURIComponent(results[1].replace(/\+/g, " "));
            }

            return term.replace(/<(?:.|\n)*?>/gm, '');
        },

        /** Searches through the index for a given term */
        search: function(term) {
            // Create a new search index if needed
            if (!bhIndex) {
                bhIndex = new Bloodhound({
                    limit: 500,
                    local: searchIndex,
                    datumTokenizer: function (d) {
                        return tokenizer(d.name);
                    },
                    queryTokenizer: Bloodhound.tokenizers.whitespace
                });
                bhIndex.initialize();
            }

            results = [];
            bhIndex.get(term, function(matches) {
                results = matches;
            });

            if (!rootPath) {
                return results;
            }

            // Fix the element links based on the current page depth.
            return $.map(results, function(ele) {
                if (ele.link.indexOf('..') > -1) {
                    return ele;
                }
                ele.link = rootPath + ele.link;
                if (ele.fromLink) {
                    ele.fromLink = rootPath + ele.fromLink;
                }
                return ele;
            });
        },

        /** Get a search class for a specific type */
        getSearchClass: function(type) {
            return searchTypeClasses[type] || searchTypeClasses['_'];
        },

        /** Add the left-nav tree to the site */
        injectApiTree: function(ele) {
            ele.html(treeHtml);
        }
    };

    $(function() {
        // Modify the HTML to work correctly based on the current depth
        rootPath = $('body').attr('data-root-path');
        treeHtml = treeHtml.replace(/href="/g, 'href="' + rootPath);
        Sami.injectApiTree($('#api-tree'));
    });

    return root.Sami;
})(window);

$(function() {

    // Enable the version switcher
    $('#version-switcher').change(function() {
        window.location = $(this).val()
    });

    
        // Toggle left-nav divs on click
        $('#api-tree .hd span').click(function() {
            $(this).parent().parent().toggleClass('opened');
        });

        // Expand the parent namespaces of the current page.
        var expected = $('body').attr('data-name');

        if (expected) {
            // Open the currently selected node and its parents.
            var container = $('#api-tree');
            var node = $('#api-tree li[data-name="' + expected + '"]');
            // Node might not be found when simulating namespaces
            if (node.length > 0) {
                node.addClass('active').addClass('opened');
                node.parents('li').addClass('opened');
                var scrollPos = node.offset().top - container.offset().top + container.scrollTop();
                // Position the item nearer to the top of the screen.
                scrollPos -= 200;
                container.scrollTop(scrollPos);
            }
        }

    
    
        var form = $('#search-form .typeahead');
        form.typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        }, {
            name: 'search',
            displayKey: 'name',
            source: function (q, cb) {
                cb(Sami.search(q));
            }
        });

        // The selection is direct-linked when the user selects a suggestion.
        form.on('typeahead:selected', function(e, suggestion) {
            window.location = suggestion.link;
        });

        // The form is submitted when the user hits enter.
        form.keypress(function (e) {
            if (e.which == 13) {
                $('#search-form').submit();
                return true;
            }
        });

    
});


